Basic Algorithm Scripting: Slice and Splice

You are given two arrays and an index.

Use the array methods slice and splice to copy each element of the first array into the second array, in order.

Begin inserting elements at index n of the second array.

Return the resulting array. The input arrays should remain the same after the function runs.


function frankenSplice(arr1, arr2, n) {
  // It's alive. It's alive!

  let copyOfArray2 = arr2.slice()
  let copyOfArray1 = arr1.slice()
  
  for (let i = copyOfArray1.length-1; i >= 0; i-- ) {
     copyOfArray2.splice(n, 0, copyOfArray1[i])
  }

 return copyOfArray2

}

frankenSplice(["claw", "tentacle"], ["head", "shoulders", "knees", "toes"], 2)


##Solution using spread operator##

function frankenSplice(arr1, arr2, n) {
  // It's alive. It's alive!

  let copyOfArray2 = arr2.slice()
  let copyOfArray1 = arr1.slice()
  

  copyOfArray2.splice(n, 0, ...copyOfArray1)


 return copyOfArray2

}

frankenSplice(["claw", "tentacle"], ["head", "shoulders", "knees", "toes"], 2)


Test Criteria - 
frankenSplice([1, 2, 3], [4, 5], 1) should return [4, 1, 2, 3, 5].
Passed
frankenSplice([1, 2], ["a", "b"], 1) should return ["a", 1, 2, "b"].
Passed
frankenSplice(["claw", "tentacle"], ["head", "shoulders", "knees", "toes"], 2) should return ["head", "shoulders", "claw", "tentacle", "knees", "toes"].
Passed
All elements from the first array should be added to the second array in their original order.
Passed
The first array should remain the same after the function runs.
Passed
The second array should remain the same after the function runs.
